from config import *
from kb import *

# –°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
@dp.message_handler(commands=['start', 'help'])
async def command_start(message : types.Message):
    await message.answer('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —è —á–∞—Ç-–±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –í–∞–º –Ω–∞–π—Ç–∏ –ª—é–±–æ–π –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –ø–µ—Å—Ç–∏—Ü–∏–¥', parse_mode='HTML', reply_markup=await mainKB())

# –ú–µ–Ω—é —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
@dp.callback_query_handler(lambda c: c.data == 'main - ‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')
async def process_callback_pesticides(callback_query: types.CallbackQuery):
    print(callback_query.data)
    await bot.answer_callback_query(callback_query.id)
    await callback_query.message.edit_text('–ü–û–õ–ï–ó–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø!!!', parse_mode='html', reply_markup = await infoKB())

# –í—ã—Ö–æ–¥ –∏–∑ –º–µ–Ω—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–∞ –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
@dp.callback_query_handler(lambda c: c.data == 'info - –ù–∞–∑–∞–¥')
async def process_callback_pesticides(callback_query: types.CallbackQuery):
    print(callback_query.data)
    await callback_query.message.edit_text('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —è —á–∞—Ç-–±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –í–∞–º –Ω–∞–π—Ç–∏ –ª—é–±–æ–π –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –ø–µ—Å—Ç–∏—Ü–∏–¥', parse_mode='HTML', reply_markup=await mainKB())

# –ü–æ–∏—Å–∫ –ø–µ—Å—Ç–∏—Ü–∏–¥–æ–≤
@dp.callback_query_handler(lambda c: c.data == 'main - üîç –ù–∞–π—Ç–∏ –ø–µ—Å—Ç–∏—Ü–∏–¥')
async def process_callback_pesticides(callback_query: types.CallbackQuery):
    print(callback_query.data)
    await bot.answer_callback_query(callback_query.id)
    await callback_query.message.edit_text('–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–Ω–∏–µ –ø–µ—Å—Ç–∏—Ü–∏–¥–∞ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —É–¥–æ–±–Ω—ã–π —Å–ø–∏—Å–æ–∫.\n–ù–∞–π–¥–µ—Ç—Å—è –≤—Å–µ!', parse_mode='html', reply_markup = await pesticidesKB())



@dp.callback_query_handler(lambda c: c.data == 'pesticides - üìó –°–ø–∏—Å–æ–∫ –ø–µ—Å—Ç–∏—Ü–∏–¥–æ–≤')
async def process_callback_pesticides(callback_query: types.CallbackQuery):
    print(callback_query.data)

    
    await bot.answer_callback_query(callback_query.id)
    await callback_query.message.edit_text('–°–ø–∏—Å–æ–∫ –ø–µ—Å—Ç–∏—Ü–∏–¥–æ–≤', parse_mode='html', reply_markup = await alphabetKB())

@dp.callback_query_handler(lambda c: c.data == 'pesticides - –ù–∞–∑–∞–¥')
async def process_callback_pesticides(callback_query: types.CallbackQuery):
    print(callback_query.data)
    await bot.answer_callback_query(callback_query.id)
    await callback_query.message.edit_text('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —è —á–∞—Ç-–±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –í–∞–º –Ω–∞–π—Ç–∏ –ª—é–±–æ–π –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –ø–µ—Å—Ç–∏—Ü–∏–¥', parse_mode='HTML', reply_markup=await mainKB())


@dp.callback_query_handler(lambda c: c.data == 'pesticidesListKB - –ù–∞–∑–∞–¥')
async def process_callback_pesticides(callback_query: types.CallbackQuery):
    print(callback_query.data)
    await bot.answer_callback_query(callback_query.id)
    await callback_query.message.edit_text('–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–Ω–∏–µ –ø–µ—Å—Ç–∏—Ü–∏–¥–∞ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —É–¥–æ–±–Ω—ã–π —Å–ø–∏—Å–æ–∫.\n–ù–∞–π–¥–µ—Ç—Å—è –≤—Å–µ!', parse_mode='html', reply_markup = await pesticidesKB())
